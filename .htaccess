# ----------------------------------------------------------------------
#  PHP Settings
# ----------------------------------------------------------------------

# prevent access to PHP error log
<Files php_errors.log>
    Order allow,deny
	Deny from all
	Satisfy All
</Files>

ServerSignature Off



# ----------------------------------------------------------------------
#  UTF-8 encoding
# ----------------------------------------------------------------------

# Use UTF-8 encoding for anything served text/plain or text/html
AddDefaultCharset utf-8

# Force UTF-8 for a number of file formats
AddCharset utf-8 .atom .css .js .json .rss .vtt .webapp .xml



# ----------------------------------------------------------------------
# Enable Rewrite Engine
# ----------------------------------------------------------------------
<IfModule mod_rewrite.c>
	Options +FollowSymlinks
	Options -MultiViews
	RewriteEngine On
	RewriteBase /
</IfModule>



# ----------------------------------------------------------------------
# | HTTP Strict Transport Security (HSTS)                              |
# ----------------------------------------------------------------------

# Force client-side SSL redirection.
#
# If a user types `example.com` in their browser, even if the server
# redirects them to the secure version of the website, that still leaves
# a window of opportunity (the initial HTTP connection) for an attacker
# to downgrade or redirect the request.
#
# The following header ensures that browser will ONLY connect to your
# server via HTTPS, regardless of what the users type in the browser's
# address bar.
#
# (!) Remove the `includeSubDomains` optional directive if the website's
# subdomains are not using HTTPS.
#
# http://www.html5rocks.com/en/tutorials/security/transport-layer-security/
# https://tools.ietf.org/html/draft-ietf-websec-strict-transport-sec-14#section-6.1
# http://blogs.msdn.com/b/ieinternals/archive/2014/08/18/hsts-strict-transport-security-attacks-mitigations-deployment-https.aspx

<IfModule mod_headers.c>
     Header set Strict-Transport-Security "max-age=16070400"
</IfModule>



# ----------------------------------------------------------------------
# Domain Rewrite
# ----------------------------------------------------------------------

# Rewrite to force SSL
#RewriteCond %{SERVER_PORT} 80 
#RewriteCond %{HTTP_HOST} ^dev\.modx\.today [OR,NC]
#RewriteCond %{HTTP_HOST} ^staging\.modx\.today [OR,NC]
#RewriteCond %{HTTP_HOST} ^localhost\.modx\.today [OR,NC]
#RewriteCond %{HTTP_HOST} ^modx\.today [OR,NC]
#RewriteRule (.*) https://modx.today%{REQUEST_URI} [R=301,L]

RewriteCond %{HTTP_HOST} !(.*)?modx.today$ [NC]
RewriteRule ^(.*)$ http://modx.today/$1 [L,R=301] 

RewriteRule ^(\.|_backup|_deployment|_gitify|core|config\.core\.php|package\.json|readme.md) /index.php?q=404 [L]


# ----------------------------------------------------------------------
#  More security
# ----------------------------------------------------------------------

# "-Indexes" will have Apache block users from browsing folders without a default document
# Usually you should leave this activated, because you shouldn't allow everybody to surf through
# every folder on your server (which includes rather private places like CMS system folders).
<IfModule mod_autoindex.c>
	Options -Indexes
</IfModule>


# Block access to "hidden" directories whose names begin with a period. This
# includes directories used by version control systems such as Subversion or Git.
<IfModule mod_rewrite.c>
  RewriteCond %{SCRIPT_FILENAME} -d
  RewriteCond %{SCRIPT_FILENAME} -f
  RewriteRule "(^|/)\." - [F]
</IfModule>


# Block access to htaccess and htpasswd files
<FilesMatch "\.(htaccess|htpasswd)$">
	order allow,deny
	deny from all
</FilesMatch>

# Block access to backup and source files
# This files may be left by some text/html editors and
# pose a great security danger, when someone can access them
<FilesMatch "\.(bak|config|sql|fla|psd|ini|log|sh|inc|~|swp)$">
	Order allow,deny
	Deny from all
	Satisfy All
</FilesMatch>


# ----------------------------------------------------------------------
# Better IE experience
# ----------------------------------------------------------------------

<IfModule mod_headers.c>
    Header set X-UA-Compatible "IE=edge"
    # `mod_headers` can't match based on the content-type, however, we only
    # want to send this header for HTML pages and not for the other resources
    <FilesMatch "\.(appcache|crx|css|eot|gif|htc|ico|jpe?g|js|m4a|m4v|manifest|mp4|oex|oga|ogg|ogv|otf|pdf|png|safariextz|svgz?|ttf|vcf|webapp|webm|webp|woff|xml|xpi)$">
        Header unset X-UA-Compatible
    </FilesMatch>
</IfModule>



# ----------------------------------------------------------------------
#  filename based cache busting
# ----------------------------------------------------------------------

RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^(.+)\.(\d+)\.(ico|js|css|jpg|png|gif|svg|eot|ttf|woff)$ $1.$3



# ----------------------------------------------------------------------
# Custom Rewrites
# ----------------------------------------------------------------------

#RewriteRule ^produkte/(.+)/$ produkte/?name=$1 [L,QSA]




# ----------------------------------------------------------------------
# MODX StaticCache
# ----------------------------------------------------------------------

# statcache rewrite rules
#RewriteCond %{HTTP_USER_AGENT} !MODX\ RegenCache
#RewriteCond %{QUERY_STRING} ^$
#RewriteCond %{REQUEST_METHOD} !POST
#RewriteCond %{DOCUMENT_ROOT}statcache/%{REQUEST_URI}~index.html -f
#RewriteRule ^(.*)$ /statcache/$1~index.html [L,QSA]

#RewriteCond %{HTTP_USER_AGENT} !MODX\ RegenCache
#RewriteCond %{QUERY_STRING} ^$
#RewriteCond %{REQUEST_METHOD} !POST
#RewriteCond %{DOCUMENT_ROOT}statcache/%{REQUEST_URI} -f
#RewriteRule ^(.*)$ /statcache/$1 [L,QSA]

# ----------------------------------------------------------------------
# MODX Friendly URLs part
# ----------------------------------------------------------------------

RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php?q=$1 [L,QSA]




# ----------------------------------------------------------------------
#  expire headers
# ----------------------------------------------------------------------

<IfModule mod_expires.c>
	ExpiresActive On
	
	# Data interchange
    ExpiresByType application/json                      "access plus 0 seconds"
    ExpiresByType application/ld+json                   "access plus 0 seconds"
    ExpiresByType application/vnd.geo+json              "access plus 0 seconds"
    ExpiresByType application/xml                       "access plus 0 seconds"
    ExpiresByType text/xml                              "access plus 0 seconds"
    
    # Web feeds
    ExpiresByType application/atom+xml                  "access plus 1 hour"
    ExpiresByType application/rss+xml                   "access plus 1 hour"
    
    
	#css
	ExpiresByType text/css "access plus 1 year"
	#js
	ExpiresByType application/javascript "access plus 1 year"
	ExpiresByType application/x-javascript "access plus 1 year"
	#images
	ExpiresByType image/gif "access plus 1 year"
	ExpiresByType image/jpeg "access plus 1 year"
	ExpiresByType image/png "access plus 1 year"
	ExpiresByType image/x-icon "access plus 1 year"
	#webfonts
	ExpiresByType application/x-font-ttf    "access plus 1 year"
	ExpiresByType font/opentype             "access plus 1 year"
	ExpiresByType application/x-font-woff   "access plus 1 year"
	ExpiresByType application/font-woff    "access plus 1 year"
	ExpiresByType image/svg+xml             "access plus 1 year"
	ExpiresByType application/vnd.ms-fontobject "access plus 1 year"
</IfModule>


# Remove `ETags` as resources are sent with far-future expires headers.
# https://developer.yahoo.com/performance/rules.html#etags
# `FileETag None` doesn't work in all cases.
<IfModule mod_headers.c>
    Header unset ETag
</IfModule>

FileETag None



# ----------------------------------------------------------------------
#  Compression
# ----------------------------------------------------------------------

<IfModule mod_deflate.c>

    # Force compression for mangled headers.
    # http://developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping
    <IfModule mod_setenvif.c>
        <IfModule mod_headers.c>
            SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
            RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
        </IfModule>
    </IfModule>

    # Compress all output labeled with one of the following MIME-types
    # (for Apache versions below 2.3.7, you don't need to enable `mod_filter`
    #  and can remove the `<IfModule mod_filter.c>` and `</IfModule>` lines
    #  as `AddOutputFilterByType` is still in the core directives).
    <IfModule mod_filter.c>
        AddOutputFilterByType DEFLATE application/atom+xml \
                                      application/javascript \
                                      application/json \
                                      application/rss+xml \
                                      application/vnd.ms-fontobject \
                                      application/x-font-ttf \
                                      application/x-web-app-manifest+json \
                                      application/xhtml+xml \
                                      application/xml \
                                      font/opentype \
                                      image/svg+xml \
                                      image/x-icon \
                                      text/css \
                                      text/html \
                                      text/plain \
                                      text/x-component \
                                      text/xml
    </IfModule>

</IfModule>